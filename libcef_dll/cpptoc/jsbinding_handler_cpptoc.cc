// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/jsbinding_handler_cpptoc.h"
#include "libcef_dll/ctocpp/browser_ctocpp.h"
#include "libcef_dll/ctocpp/frame_ctocpp.h"
#include "libcef_dll/ctocpp/v8value_ctocpp.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

void CEF_CALLBACK jsbinding_handler_on_jsbinding(
    struct _cef_jsbinding_handler_t* self, cef_browser_t* browser,
    cef_frame_t* frame, struct _cef_v8value_t* object)
{
  DCHECK(self);
  DCHECK(browser);
  DCHECK(frame);
  DCHECK(object);
  if (!self || !browser || !frame || !object)
    return;

  return CefJSBindingHandlerCppToC::Get(self)->OnJSBinding(
      CefBrowserCToCpp::Wrap(browser), CefFrameCToCpp::Wrap(frame),
      CefV8ValueCToCpp::Wrap(object));
}


// CONSTRUCTOR - Do not edit by hand.

CefJSBindingHandlerCppToC::CefJSBindingHandlerCppToC(CefJSBindingHandler* cls)
    : CefCppToC<CefJSBindingHandlerCppToC, CefJSBindingHandler,
        cef_jsbinding_handler_t>(cls)
{
  struct_.struct_.on_jsbinding = jsbinding_handler_on_jsbinding;
}

#ifndef NDEBUG
template<> long CefCppToC<CefJSBindingHandlerCppToC, CefJSBindingHandler,
    cef_jsbinding_handler_t>::DebugObjCt = 0;
#endif

