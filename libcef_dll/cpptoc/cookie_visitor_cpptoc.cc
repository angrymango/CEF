// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/cookie_visitor_cpptoc.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

int CEF_CALLBACK cookie_visitor_visit(struct _cef_cookie_visitor_t* self,
    const struct _cef_cookie_t* cookie, int count, int total,
    int* deleteCookie)
{
  DCHECK(self);
  DCHECK(cookie);
  if(!self || !cookie)
    return 0;

  // Reference the existing values without copying.
  CefCookie cookieObj;
  cookieObj.Set(*cookie, false);

  bool delVal = (*deleteCookie)?true:false;
  bool retVal = CefCookieVisitorCppToC::Get(self)->Visit(cookieObj, count,
      total, delVal);
  *deleteCookie = delVal;

  return retVal;
}


// CONSTRUCTOR - Do not edit by hand.

CefCookieVisitorCppToC::CefCookieVisitorCppToC(CefCookieVisitor* cls)
    : CefCppToC<CefCookieVisitorCppToC, CefCookieVisitor, cef_cookie_visitor_t>(
        cls)
{
  struct_.struct_.visit = cookie_visitor_visit;
}

#ifndef NDEBUG
template<> long CefCppToC<CefCookieVisitorCppToC, CefCookieVisitor,
    cef_cookie_visitor_t>::DebugObjCt = 0;
#endif

