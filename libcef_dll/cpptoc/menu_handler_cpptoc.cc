// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/menu_handler_cpptoc.h"
#include "libcef_dll/ctocpp/browser_ctocpp.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

int CEF_CALLBACK menu_handler_on_before_menu(struct _cef_menu_handler_t* self,
    cef_browser_t* browser, const cef_handler_menuinfo_t* menuInfo)
{
  DCHECK(self);
  DCHECK(browser);
  DCHECK(menuInfo);
  if (!self || !browser || !menuInfo)
    return 0;

  return CefMenuHandlerCppToC::Get(self)->OnBeforeMenu(
      CefBrowserCToCpp::Wrap(browser), *menuInfo);
}

void CEF_CALLBACK menu_handler_get_menu_label(struct _cef_menu_handler_t* self,
    cef_browser_t* browser, enum cef_handler_menuid_t menuId,
    cef_string_t* label)
{
  DCHECK(self);
  DCHECK(browser);
  DCHECK(label);
  if (!self || !browser || !label)
    return;

  CefString labelStr(label);
  CefMenuHandlerCppToC::Get(self)->GetMenuLabel(
      CefBrowserCToCpp::Wrap(browser), menuId, labelStr);
}

int CEF_CALLBACK menu_handler_on_menu_action(struct _cef_menu_handler_t* self,
    cef_browser_t* browser, enum cef_handler_menuid_t menuId)
{
  DCHECK(self);
  DCHECK(browser);
  if (!self || !browser)
    return 0;

  return CefMenuHandlerCppToC::Get(self)->OnMenuAction(
      CefBrowserCToCpp::Wrap(browser), menuId);
}


// CONSTRUCTOR - Do not edit by hand.

CefMenuHandlerCppToC::CefMenuHandlerCppToC(CefMenuHandler* cls)
    : CefCppToC<CefMenuHandlerCppToC, CefMenuHandler, cef_menu_handler_t>(cls)
{
  struct_.struct_.on_before_menu = menu_handler_on_before_menu;
  struct_.struct_.get_menu_label = menu_handler_get_menu_label;
  struct_.struct_.on_menu_action = menu_handler_on_menu_action;
}

#ifndef NDEBUG
template<> long CefCppToC<CefMenuHandlerCppToC, CefMenuHandler,
    cef_menu_handler_t>::DebugObjCt = 0;
#endif

