// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/cpptoc/focus_handler_cpptoc.h"
#include "libcef_dll/ctocpp/browser_ctocpp.h"


// MEMBER FUNCTIONS - Body may be edited by hand.

void CEF_CALLBACK focus_handler_on_take_focus(struct _cef_focus_handler_t* self,
    cef_browser_t* browser, int next)
{
  DCHECK(self);
  DCHECK(browser);
  if (!self || !browser)
    return;

  CefFocusHandlerCppToC::Get(self)->OnTakeFocus(
      CefBrowserCToCpp::Wrap(browser), next?true:false);
}

int CEF_CALLBACK focus_handler_on_set_focus(struct _cef_focus_handler_t* self,
    cef_browser_t* browser, int isWidget)
{
  DCHECK(self);
  DCHECK(browser);
  if (!self || !browser)
    return 0;

  return CefFocusHandlerCppToC::Get(self)->OnSetFocus(
      CefBrowserCToCpp::Wrap(browser), isWidget?true:false);
}


// CONSTRUCTOR - Do not edit by hand.

CefFocusHandlerCppToC::CefFocusHandlerCppToC(CefFocusHandler* cls)
    : CefCppToC<CefFocusHandlerCppToC, CefFocusHandler, cef_focus_handler_t>(
        cls)
{
  struct_.struct_.on_take_focus = focus_handler_on_take_focus;
  struct_.struct_.on_set_focus = focus_handler_on_set_focus;
}

#ifndef NDEBUG
template<> long CefCppToC<CefFocusHandlerCppToC, CefFocusHandler,
    cef_focus_handler_t>::DebugObjCt = 0;
#endif

