// Copyright (c) 2009 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _REQUEST_CTOCPP_H
#define _REQUEST_CTOCPP_H

#ifndef USING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else // USING_CEF_SHARED

#include "include/cef.h"
#include "include/cef_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefRequestCToCpp
    : public CefCToCpp<CefRequestCToCpp, CefRequest, cef_request_t>
{
public:
  CefRequestCToCpp(cef_request_t* str)
      : CefCToCpp<CefRequestCToCpp, CefRequest, cef_request_t>(str) {}
  virtual ~CefRequestCToCpp() {}

  // CefRequest methods
  virtual std::wstring GetURL();
  virtual void SetURL(const std::wstring& url);
  virtual std::wstring GetMethod();
  virtual void SetMethod(const std::wstring& method);
  virtual CefRefPtr<CefPostData> GetPostData();
  virtual void SetPostData(CefRefPtr<CefPostData> postData);
  virtual void GetHeaderMap(HeaderMap& headerMap);
  virtual void SetHeaderMap(const HeaderMap& headerMap);
  virtual void Set(const std::wstring& url, const std::wstring& method,
      CefRefPtr<CefPostData> postData, const HeaderMap& headerMap);
};

#endif // USING_CEF_SHARED
#endif // _REQUEST_CTOCPP_H

