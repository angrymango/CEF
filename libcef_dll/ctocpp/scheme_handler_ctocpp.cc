// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing static and
// virtual method implementations. See the translator.README.txt file in the
// tools directory for more information.
//

#include "libcef_dll/cpptoc/request_cpptoc.h"
#include "libcef_dll/ctocpp/scheme_handler_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

bool CefSchemeHandlerCToCpp::ProcessRequest(CefRefPtr<CefRequest> request,
    CefString& mime_type, int* response_length)
{
  if(CEF_MEMBER_MISSING(struct_, process_request))
    return false;

  return struct_->process_request(struct_, CefRequestCppToC::Wrap(request),
      mime_type.GetWritableStruct(), response_length) ? true : false;
}

void CefSchemeHandlerCToCpp::Cancel()
{
  if(CEF_MEMBER_MISSING(struct_, cancel))
    return;

  struct_->cancel(struct_);
}

bool CefSchemeHandlerCToCpp::ReadResponse(void* data_out, int bytes_to_read,
    int* bytes_read)
{
  if(CEF_MEMBER_MISSING(struct_, read_response))
    return false;

  return struct_->read_response(struct_, data_out, bytes_to_read, bytes_read) ?
      true : false;
}


#ifdef _DEBUG
template<> long CefCToCpp<CefSchemeHandlerCToCpp, CefSchemeHandler,
    cef_scheme_handler_t>::DebugObjCt = 0;
#endif

