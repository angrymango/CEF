// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _XMLREADER_CTOCPP_H
#define _XMLREADER_CTOCPP_H

#ifndef USING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else // USING_CEF_SHARED

#include "include/cef.h"
#include "include/cef_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefXmlReaderCToCpp
    : public CefCToCpp<CefXmlReaderCToCpp, CefXmlReader, cef_xml_reader_t>
{
public:
  CefXmlReaderCToCpp(cef_xml_reader_t* str)
      : CefCToCpp<CefXmlReaderCToCpp, CefXmlReader, cef_xml_reader_t>(str) {}
  virtual ~CefXmlReaderCToCpp() {}

  // CefXmlReader methods
  virtual bool MoveToNextNode();
  virtual bool Close();
  virtual bool HasError();
  virtual CefString GetError();
  virtual NodeType GetType();
  virtual int GetDepth();
  virtual CefString GetLocalName();
  virtual CefString GetPrefix();
  virtual CefString GetQualifiedName();
  virtual CefString GetNamespaceURI();
  virtual CefString GetBaseURI();
  virtual CefString GetXmlLang();
  virtual bool IsEmptyElement();
  virtual bool HasValue();
  virtual CefString GetValue();
  virtual bool HasAttributes();
  virtual size_t GetAttributeCount();
  virtual CefString GetAttribute(int index);
  virtual CefString GetAttribute(const CefString& qualifiedName);
  virtual CefString GetAttribute(const CefString& localName,
      const CefString& namespaceURI);
  virtual CefString GetInnerXml();
  virtual CefString GetOuterXml();
  virtual int GetLineNumber();
  virtual bool MoveToAttribute(int index);
  virtual bool MoveToAttribute(const CefString& qualifiedName);
  virtual bool MoveToAttribute(const CefString& localName,
      const CefString& namespaceURI);
  virtual bool MoveToFirstAttribute();
  virtual bool MoveToNextAttribute();
  virtual bool MoveToCarryingElement();
};

#endif // USING_CEF_SHARED
#endif // _XMLREADER_CTOCPP_H

