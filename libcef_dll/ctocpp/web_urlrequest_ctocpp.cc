// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing static and
// virtual method implementations. See the translator.README.txt file in the
// tools directory for more information.
//

#include "libcef_dll/cpptoc/web_urlrequest_client_cpptoc.h"
#include "libcef_dll/ctocpp/request_ctocpp.h"
#include "libcef_dll/ctocpp/web_urlrequest_ctocpp.h"


// STATIC METHODS - Body may be edited by hand.

CefRefPtr<CefWebURLRequest> CefWebURLRequest::CreateWebURLRequest(
    CefRefPtr<CefRequest> request, CefRefPtr<CefWebURLRequestClient> client)
{
  cef_request_t* requestStruct = NULL;
  if(request.get())
    requestStruct = CefRequestCToCpp::Unwrap(request);

  cef_web_urlrequest_client_t* clientStruct = NULL;
  if(client.get())
    clientStruct = CefWebURLRequestClientCppToC::Wrap(client);

  cef_web_urlrequest_t* impl =
      cef_web_urlrequest_create(requestStruct, clientStruct);
  if(impl)
    return CefWebURLRequestCToCpp::Wrap(impl);
  return NULL;
}


// VIRTUAL METHODS - Body may be edited by hand.

void CefWebURLRequestCToCpp::Cancel()
{
  if(CEF_MEMBER_MISSING(struct_, cancel))
    return;

  struct_->cancel(struct_);
}

CefWebURLRequest::RequestState CefWebURLRequestCToCpp::GetState()
{
  if(CEF_MEMBER_MISSING(struct_, get_state))
    return WUR_STATE_UNSENT;

  return struct_->get_state(struct_);
}


#ifndef NDEBUG
template<> long CefCToCpp<CefWebURLRequestCToCpp, CefWebURLRequest,
    cef_web_urlrequest_t>::DebugObjCt = 0;
#endif

