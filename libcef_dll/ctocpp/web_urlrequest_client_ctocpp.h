// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _WEBURLREQUESTCLIENT_CTOCPP_H
#define _WEBURLREQUESTCLIENT_CTOCPP_H

#ifndef BUILDING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed DLL-side only")
#else // BUILDING_CEF_SHARED

#include "include/cef.h"
#include "include/cef_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed DLL-side only.
class CefWebURLRequestClientCToCpp
    : public CefCToCpp<CefWebURLRequestClientCToCpp, CefWebURLRequestClient,
        cef_web_urlrequest_client_t>
{
public:
  CefWebURLRequestClientCToCpp(cef_web_urlrequest_client_t* str)
      : CefCToCpp<CefWebURLRequestClientCToCpp, CefWebURLRequestClient,
          cef_web_urlrequest_client_t>(str) {}
  virtual ~CefWebURLRequestClientCToCpp() {}

  // CefWebURLRequestClient methods
  virtual void OnStateChange(CefRefPtr<CefWebURLRequest> requester,
      RequestState state);
  virtual void OnRedirect(CefRefPtr<CefWebURLRequest> requester,
      CefRefPtr<CefRequest> request, CefRefPtr<CefResponse> response);
  virtual void OnHeadersReceived(CefRefPtr<CefWebURLRequest> requester,
      CefRefPtr<CefResponse> response);
  virtual void OnProgress(CefRefPtr<CefWebURLRequest> requester,
      uint64 bytesSent, uint64 totalBytesToBeSent);
  virtual void OnData(CefRefPtr<CefWebURLRequest> requester, const void* data,
      int dataLength);
  virtual void OnError(CefRefPtr<CefWebURLRequest> requester,
      ErrorCode errorCode);
};

#endif // BUILDING_CEF_SHARED
#endif // _WEBURLREQUESTCLIENT_CTOCPP_H

