// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing static and
// virtual method implementations. See the translator.README.txt file in the
// tools directory for more information.
//

#include "libcef_dll/cpptoc/browser_cpptoc.h"
#include "libcef_dll/cpptoc/frame_cpptoc.h"
#include "libcef_dll/ctocpp/jsdialog_handler_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

bool CefJSDialogHandlerCToCpp::OnJSAlert(CefRefPtr<CefBrowser> browser,
    CefRefPtr<CefFrame> frame, const CefString& message)
{
  if (CEF_MEMBER_MISSING(struct_, on_jsalert))
    return false;

  return struct_->on_jsalert(struct_, CefBrowserCppToC::Wrap(browser),
      CefFrameCppToC::Wrap(frame), message.GetStruct()) ? true : false;
}

bool CefJSDialogHandlerCToCpp::OnJSConfirm(CefRefPtr<CefBrowser> browser,
    CefRefPtr<CefFrame> frame, const CefString& message, bool& retval)
{
  if (CEF_MEMBER_MISSING(struct_, on_jsconfirm))
    return false;

  int ret = 0;
  int rv = struct_->on_jsconfirm(struct_, CefBrowserCppToC::Wrap(browser),
      CefFrameCppToC::Wrap(frame), message.GetStruct(), &ret);
  retval = (ret ? true : false);
  return (rv ? true : false);
}

bool CefJSDialogHandlerCToCpp::OnJSPrompt(CefRefPtr<CefBrowser> browser,
    CefRefPtr<CefFrame> frame, const CefString& message,
    const CefString& defaultValue, bool& retval, CefString& result)
{
  if (CEF_MEMBER_MISSING(struct_, on_jsprompt))
    return false;

  int ret = 0;
  int rv = struct_->on_jsprompt(struct_, CefBrowserCppToC::Wrap(browser),
      CefFrameCppToC::Wrap(frame), message.GetStruct(),
      defaultValue.GetStruct(), &ret, result.GetWritableStruct());
  retval = (ret ? true : false);
  return (rv ? true : false);
}


#ifndef NDEBUG
template<> long CefCToCpp<CefJSDialogHandlerCToCpp, CefJSDialogHandler,
    cef_jsdialog_handler_t>::DebugObjCt = 0;
#endif

