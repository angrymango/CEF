// Copyright (c) 2011 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing static and
// virtual method implementations. See the translator.README.txt file in the
// tools directory for more information.
//

#include "libcef_dll/cpptoc/stream_reader_cpptoc.h"
#include "libcef_dll/ctocpp/content_filter_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

void CefContentFilterCToCpp::ProcessData(const void* data, int data_size,
    CefRefPtr<CefStreamReader>& substitute_data)
{
  if (CEF_MEMBER_MISSING(struct_, process_data))
    return;

  cef_stream_reader_t* streamRet = NULL;
  struct_->process_data(struct_, data, data_size, &streamRet);

  if(streamRet)
    substitute_data = CefStreamReaderCppToC::Unwrap(streamRet);
}

void CefContentFilterCToCpp::Drain(CefRefPtr<CefStreamReader>& remainder)
{
  if (CEF_MEMBER_MISSING(struct_, drain))
    return;

  cef_stream_reader_t* streamRet = NULL;
  struct_->drain(struct_, &streamRet);

  if(streamRet)
    remainder = CefStreamReaderCppToC::Unwrap(streamRet);
}


#ifndef NDEBUG
template<> long CefCToCpp<CefContentFilterCToCpp, CefContentFilter,
    cef_content_filter_t>::DebugObjCt = 0;
#endif

