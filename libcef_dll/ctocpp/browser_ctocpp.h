// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// -------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool and should not edited
// by hand. See the translator.README.txt file in the tools directory for
// more information.
//

#ifndef _BROWSER_CTOCPP_H
#define _BROWSER_CTOCPP_H

#ifndef USING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else // USING_CEF_SHARED

#include "include/cef.h"
#include "include/cef_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefBrowserCToCpp
    : public CefCToCpp<CefBrowserCToCpp, CefBrowser, cef_browser_t>
{
public:
  CefBrowserCToCpp(cef_browser_t* str)
      : CefCToCpp<CefBrowserCToCpp, CefBrowser, cef_browser_t>(str) {}
  virtual ~CefBrowserCToCpp() {}

  // CefBrowser methods
  virtual void CloseBrowser();
  virtual bool CanGoBack();
  virtual void GoBack();
  virtual bool CanGoForward();
  virtual void GoForward();
  virtual void Reload();
  virtual void ReloadIgnoreCache();
  virtual void StopLoad();
  virtual void SetFocus(bool enable);
  virtual CefWindowHandle GetWindowHandle();
  virtual bool IsPopup();
  virtual CefRefPtr<CefHandler> GetHandler();
  virtual CefRefPtr<CefFrame> GetMainFrame();
  virtual CefRefPtr<CefFrame> GetFocusedFrame();
  virtual CefRefPtr<CefFrame> GetFrame(const CefString& name);
  virtual void GetFrameNames(std::vector<CefString>& names);
  virtual void Find(int identifier, const CefString& searchText, bool forward,
      bool matchCase, bool findNext);
  virtual void StopFinding(bool clearSelection);
  virtual double GetZoomLevel();
  virtual void SetZoomLevel(double zoomLevel);
  virtual void ShowDevTools();
  virtual void CloseDevTools();
  virtual bool IsWindowRenderingDisabled();
  virtual bool GetSize(PaintElementType type, int& width, int& height);
  virtual void SetSize(PaintElementType type, int width, int height);
  virtual bool IsPopupVisible();
  virtual void HidePopup();
  virtual void Invalidate(const CefRect& dirtyRect);
  virtual bool GetImage(PaintElementType type, int width, int height,
      void* buffer);
  virtual void SendKeyEvent(KeyType type, int key, int modifiers, bool sysChar,
      bool imeChar);
  virtual void SendMouseClickEvent(int x, int y, MouseButtonType type,
      bool mouseUp, int clickCount);
  virtual void SendMouseMoveEvent(int x, int y, bool mouseLeave);
  virtual void SendMouseWheelEvent(int x, int y, int delta);
  virtual void SendFocusEvent(bool setFocus);
  virtual void SendCaptureLostEvent();
};

#endif // USING_CEF_SHARED
#endif // _BROWSER_CTOCPP_H

