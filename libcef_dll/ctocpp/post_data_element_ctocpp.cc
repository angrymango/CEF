// Copyright (c) 2010 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// A portion of this file was generated by the CEF translator tool.  When
// making changes by hand only do so within the body of existing static and
// virtual method implementations. See the translator.README.txt file in the
// tools directory for more information.
//

#include "libcef_dll/ctocpp/post_data_element_ctocpp.h"


// STATIC METHODS - Body may be edited by hand.

CefRefPtr<CefPostDataElement> CefPostDataElement::CreatePostDataElement()
{
  cef_post_data_element_t* impl = cef_post_data_element_create();
  if(impl)
    return CefPostDataElementCToCpp::Wrap(impl);
  return NULL;
}


// VIRTUAL METHODS - Body may be edited by hand.

void CefPostDataElementCToCpp::SetToEmpty()
{
  if(CEF_MEMBER_MISSING(struct_, set_to_empty))
    return;

  return struct_->set_to_empty(struct_);
}

void CefPostDataElementCToCpp::SetToFile(const CefString& fileName)
{
  if(CEF_MEMBER_MISSING(struct_, set_to_file))
    return;

  return struct_->set_to_file(struct_, fileName.GetStruct());
}

void CefPostDataElementCToCpp::SetToBytes(size_t size, const void* bytes)
{
  if(CEF_MEMBER_MISSING(struct_, set_to_bytes))
    return;

  return struct_->set_to_bytes(struct_, size, bytes);
}

CefPostDataElement::Type CefPostDataElementCToCpp::GetType()
{
  if(CEF_MEMBER_MISSING(struct_, get_type))
    return PDE_TYPE_EMPTY;

  return struct_->get_type(struct_);
}

CefString CefPostDataElementCToCpp::GetFile()
{
  CefString str;
  if(CEF_MEMBER_MISSING(struct_, get_file))
    return str;

  cef_string_userfree_t strPtr = struct_->get_file(struct_);
  str.AttachToUserFree(strPtr);
  return str;
}

size_t CefPostDataElementCToCpp::GetBytesCount()
{
  if(CEF_MEMBER_MISSING(struct_, get_bytes_count))
    return 0;

  return struct_->get_bytes_count(struct_);
}

size_t CefPostDataElementCToCpp::GetBytes(size_t size, void* bytes)
{
  if(CEF_MEMBER_MISSING(struct_, get_bytes))
    return 0;

  return struct_->get_bytes(struct_, size, bytes);
}


#ifdef _DEBUG
long CefCToCpp<CefPostDataElementCToCpp, CefPostDataElement,
    cef_post_data_element_t>::DebugObjCt = 0;
#endif

